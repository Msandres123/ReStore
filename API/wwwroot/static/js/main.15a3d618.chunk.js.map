{"version":3,"sources":["app/models/pagination.ts","app/util/util.ts","features/basket/basketSlice.ts","features/account/accountSlice.ts","features/catalog/catalogSlice.ts","features/contact/counterSlice.ts","app/store/configureStore.ts","app/api/agent.ts","features/about/AboutPage.tsx","app/components/AppPagination.tsx","app/components/CheckboxButtons.tsx","app/components/RadioButtonGroup.tsx","app/layout/LoadingComponent.tsx","features/catalog/ProductCard.tsx","features/catalog/ProductCardSkeleton.tsx","features/catalog/ProductList.tsx","features/catalog/ProductSearch.tsx","features/catalog/Catalog.tsx","app/errors/NotFound.tsx","features/catalog/ProductDetails.tsx","features/contact/ContactPage.tsx","features/home/HomePage.tsx","app/layout/SignedInMenu.tsx","app/layout/Header.tsx","app/errors/ServerError.tsx","features/basket/BasketSummary.tsx","features/basket/BasketTable.tsx","features/basket/BasketPage.tsx","features/account/Login.tsx","features/account/Register.tsx","app/layout/PrivateRoute.tsx","features/orders/OrderDetailed.tsx","features/orders/Orders.tsx","app/components/AppTextInput.tsx","app/components/AppCheckbox.tsx","features/checkout/AddressForm.tsx","features/checkout/StripeInput.tsx","features/checkout/PaymentForm.tsx","features/checkout/Review.tsx","features/checkout/checkoutValidation.ts","features/checkout/CheckoutPage.tsx","features/checkout/CheckoutWrapper.tsx","app/layout/App.tsx","reportWebVitals.ts","index.tsx"],"names":["PaginatedResponse","items","metaData","this","currencyFormat","amount","toFixed","fetchBasketAsync","createAsyncThunk","_","thunkAPI","a","agent","Basket","get","rejectWithValue","error","data","condition","key","b","document","cookie","match","pop","getCookie","addBasketItemAsync","productId","quantity","addItem","removeBasketItemAsync","removeItem","basketSlice","createSlice","name","initialState","basket","status","reducers","setBasket","state","action","payload","clearBasket","extraReducers","builder","addCase","pending","meta","arg","fulfilled","itemIndex","findIndex","i","undefined","splice","rejected","console","log","addMatcher","isAnyOf","actions","signInUser","Account","login","userDto","user","dispatch","localStorage","setItem","JSON","stringify","fetchCurrentUser","setUser","parse","getItem","currentUser","accountSlice","signOut","history","push","toast","productsAdapter","createEntityAdapter","getAxiosParams","productParams","params","URLSearchParams","append","pageNumber","toString","pageSize","orderBy","searchTerm","brands","length","types","fetchProductsAsync","getState","catalog","Catalog","list","response","setMetaData","fetchProductAsync","details","fetchFilters","catalogSlice","getInitialState","productsLoaded","filtersLoaded","setProductParams","setPageNumber","resetProductParams","setAll","upsertOne","productSelectors","getSelectors","counterSlice","title","increment","decrement","store","configureStore","reducer","counter","account","useAppDispatch","useDispatch","useAppSelector","useSelector","axios","defaults","baseURL","process","withCredentials","responseBody","interceptors","request","use","config","token","headers","Authorization","pagination","errors","modelStateErrors","flat","pathname","Promise","reject","requests","url","then","body","post","delete","id","TestErrors","get400Error","get401Error","get404Error","get500Error","getValidationError","values","register","fetchAddress","Orders","fetch","create","Payments","createPaymentIntent","AboutPage","useState","validationErrors","setValidationErrors","Container","Typography","gutterBottom","variant","ButtonGroup","fullWidth","Button","onClick","catch","Alert","severity","AlertTitle","List","map","ListItemText","AppPagination","onPageChange","currentPage","totalCount","totalPages","Box","display","justifyContent","alignItems","Pagination","color","size","count","page","onChange","e","CheckboxButtons","checked","checkedItems","setCheckedItems","FormGroup","item","FormControlLabel","control","Checkbox","indexOf","value","newChecked","filter","handleChecked","label","RadioButtonGroup","options","selectedValue","FormControl","component","RadioGroup","Radio","LoadingComponent","message","Backdrop","open","invisible","height","CircularProgress","sx","position","top","ProductCard","product","Card","CardHeader","avatar","Avatar","bgcolor","charAt","toLocaleUpperCase","titleTypographyProps","fontWeight","CardMedia","backgroundSize","image","pictureUrl","CardContent","price","brand","type","CardActions","LoadingButton","loading","includes","Link","to","ProductCardSkeleton","Grid","xs","Skeleton","animation","width","style","marginBottom","ProductList","products","container","spacing","ProductSearch","setSearchTerm","debouncedSearch","debounce","event","target","TextField","sortOptions","selectAll","useEffect","columnSpacing","Paper","mb","p","NotFound","Divider","ProductDetails","useParams","selectById","productStatus","setQuantity","find","parseInt","src","alt","TableContainer","Table","TableBody","TableRow","TableCell","description","quantityInStock","disabled","updatedQuantity","ContactPage","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","maxHeight","SignedInMenu","React","anchorEl","setAnchorEl","Boolean","handleClose","currentTarget","typography","email","Menu","onClose","TransitionComponent","Fade","MenuItem","midLinks","path","rightLinks","navStyles","textDecoration","Header","darkMode","handleThemeChange","itemCount","reduce","sum","AppBar","Toolbar","NavLink","exact","Switch","ListItem","IconButton","Badge","badgeContent","ShoppingCart","ServerError","useHistory","useLocation","detail","BasketSummary","subtotal","deliveryFee","colSpan","align","fontStyle","BasketTable","isBasket","minWidth","TableHead","border","scope","marginRight","Add","Remove","Delete","BasketPage","Login","location","useForm","mode","handleSubmit","formState","isSubmitting","isValid","from","maxWidth","flexDirection","m","onSubmit","noValidate","mt","margin","required","autoFocus","username","helperText","autoComplete","password","Register","setError","success","forEach","handleApiErrors","pattern","PrivateRoute","Component","rest","render","props","OrderDetailed","order","setSelectedOrder","orderItems","orderStatus","orders","setOrders","setLoading","selectedOrderNumber","setSelectedOrderNumber","finally","o","total","orderDate","split","AppTextInput","useController","defaultValue","fieldState","field","AppCheckbox","AddressForm","useFormContext","sm","isDirty","StripeInput","forwardRef","ref","elementRef","useRef","useImperativeHandle","focus","current","onReady","element","PaymentForm","cardState","onCardInputChange","md","elementError","cardNumber","InputLabelProps","shrink","InputProps","inputComponent","inputProps","CardNumberElement","cardExpiry","CardExpiryElement","cardCvc","CardCvcElement","Review","validationSchema","yup","fullName","address1","address2","city","zip","country","nameOnCard","steps","CheckoutPage","activeStep","setActiveStep","orderNumber","setOrderNumber","setCardState","cardComplete","setCardComplete","paymentMessage","setPaymentMessage","paymentSucceeded","setPaymentSucceeded","stripe","useStripe","elements","useElements","elementType","complete","currentValidationSchema","methods","resolver","yupResolver","submitOrder","saveAddress","shippingAddress","cardElement","getElement","confirmCardPayment","clientSecret","payment_method","card","billing_details","paymentResult","paymentIntent","reset","getValues","handleNext","handleBack","my","Stepper","pt","pb","Step","StepLabel","step","Error","getStepContent","ml","stripePromise","loadStripe","CheckoutWrapper","App","initApp","useCallback","setDarkMode","paletteType","theme","createTheme","palette","background","default","ThemeProvider","hideProgressBar","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createBrowserHistory","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.15a3d618.chunk.js","sourcesContent":["export interface MetaData {\n    currentPage: number;\n    totalPages: number;\n    pageSize: number;\n    totalCount: number;\n}\n\nexport class PaginatedResponse<T> {\n    items: T; \n    metaData: MetaData;\n\n    constructor(items: T, metaData: MetaData) {\n        this.items = items;\n        this.metaData = metaData;\n    }\n}","export function getCookie(key: String) {\n    const b = document.cookie.match(\"(^|;)\\\\s*\" + key + \"\\\\s*=\\\\s*([^;]+)\");\n    return b ? b.pop() : \"\";\n  }\n\n  export function currencyFormat(amount: number) {\n    return '$' + (amount/100).toFixed(2)\n  }","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { Basket } from \"../../app/models/basket\";\nimport { getCookie } from \"../../app/util/util\";\n\ninterface BasketState {\n    basket: Basket | null;\n    status: string;\n}\n\nconst initialState: BasketState = {\n    basket: null,\n    status: 'idle'\n}\n\nexport const fetchBasketAsync = createAsyncThunk<Basket>(\n    'basket/fetchBasketAsync',\n    async (_, thunkAPI) => {\n        try {\n            return await agent.Basket.get();\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    },\n    {\n        condition: () => {\n            if (!getCookie('buyerId')) return false;\n        }\n    }\n)\n\nexport const addBasketItemAsync = createAsyncThunk<Basket, {productId: number, quantity?: number}>(\n    'basket/addBasketItemAsync',\n    async ({productId, quantity = 1}, thunkAPI) => {\n        try {\n            return await agent.Basket.addItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const removeBasketItemAsync = createAsyncThunk<void, \n    {productId: number, quantity: number, name?: string}>(\n    'basket/removeBasketItemAsync',\n    async ({productId, quantity}, thunkAPI) => {\n        try {\n            await agent.Basket.removeItem(productId, quantity);\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data})\n        }\n    }\n)\n\nexport const basketSlice = createSlice({\n    name: 'basket',\n    initialState,\n    reducers: {\n        setBasket: (state, action) => {\n            state.basket = action.payload\n        },\n        clearBasket: (state) => {\n            state.basket = null;\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(addBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingAddItem' + action.meta.arg.productId;\n        });\n        builder.addCase(removeBasketItemAsync.pending, (state, action) => {\n            state.status = 'pendingRemoveItem' + action.meta.arg.productId + action.meta.arg.name;\n        });\n        builder.addCase(removeBasketItemAsync.fulfilled, (state, action) => {\n            const {productId, quantity} = action.meta.arg;\n            const itemIndex = state.basket?.items.findIndex(i => i.productId === productId);\n            if (itemIndex === -1 || itemIndex === undefined) return;\n            state.basket!.items[itemIndex].quantity -= quantity;\n            if (state.basket?.items[itemIndex].quantity === 0) \n                state.basket.items.splice(itemIndex, 1);\n            state.status = 'idle';\n        });\n        builder.addCase(removeBasketItemAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.fulfilled, fetchBasketAsync.fulfilled), (state, action) => {\n            state.basket = action.payload;\n            state.status = 'idle';\n        });\n        builder.addMatcher(isAnyOf(addBasketItemAsync.rejected, fetchBasketAsync.rejected), (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n    })\n})\n\nexport const {setBasket, clearBasket} = basketSlice.actions;","import { createAsyncThunk, createSlice, isAnyOf } from \"@reduxjs/toolkit\";\nimport { User } from \"../../app/models/user\";\nimport { FieldValues} from 'react-hook-form'\nimport { history } from \"../..\";\nimport agent from \"../../app/api/agent\";\nimport { toast } from \"react-toastify\";\nimport { setBasket } from \"../basket/basketSlice\";\n\ninterface AccountState {\n    user: User | null;\n}\n\nconst initialState : AccountState = {\n    user: null\n}\n\nexport const signInUser = createAsyncThunk<User, FieldValues>(\n    'account/signInUser',\n    async (data, thunkAPI) => {\n        try {\n            const userDto = await agent.Account.login(data);\n            const {basket, ...user} = userDto;\n            if (basket) thunkAPI.dispatch(setBasket(basket));\n            localStorage.setItem('user', JSON.stringify(user));\n            return user;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({error: error.data});\n        }\n    }\n)\n\nexport const fetchCurrentUser = createAsyncThunk<User>(\n    'account/fetchCurrentUser',\n   async (_, thunkAPI) => {\n       thunkAPI.dispatch(setUser(JSON.parse(localStorage.getItem('user')!)));\n       try {\n           const userDto = await agent.Account.currentUser();\n           const {basket, ...user} = userDto;\n           if (basket) thunkAPI.dispatch(setBasket(basket))  \n           localStorage.setItem('user', JSON.stringify(user));\n           return user;\n       } catch (error: any) {\n           return thunkAPI.rejectWithValue({error: error.data})\n       }\n       \n   },\n   {\n       condition: () => {\n           if (!localStorage.getItem('user')) return false;\n       }\n   }\n)\n\nexport const accountSlice = createSlice({\n    name: 'account',\n    initialState,\n    reducers: {\n        signOut: (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            history.push('/')\n\n        },\n        setUser: (state, action) => {\n            state.user = action.payload\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchCurrentUser.rejected, (state) => {\n            state.user = null;\n            localStorage.removeItem('user');\n            toast.error('Session expired - please login again');\n            history.push('/');\n        });\n        builder.addMatcher(isAnyOf(signInUser.fulfilled, fetchCurrentUser.fulfilled), (state, action) => {\n            state.user = action.payload;\n        });\n        builder.addMatcher(isAnyOf(signInUser.rejected), (state, action) => {\n            throw action.payload;\n        })\n    })\n})\n\nexport const {signOut, setUser} = accountSlice.actions","import { createAsyncThunk, createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\nimport agent from \"../../app/api/agent\";\nimport { MetaData } from \"../../app/models/pagination\";\nimport { Product, ProductParams } from \"../../app/models/product\";\nimport { RootState } from \"../../app/store/configureStore\";\n\ninterface CatalogState {\n    productsLoaded: boolean;\n    filtersLoaded: boolean;\n    status: string;\n    brands: string[];\n    types: string[];\n    productParams: ProductParams;\n    metaData: MetaData | null;\n\n}\n\nconst productsAdapter = createEntityAdapter<Product>()\n\nfunction getAxiosParams(productParams: ProductParams) {\n    const params = new URLSearchParams();\n    params.append('pageNumber', productParams.pageNumber.toString());\n    params.append('pageSize', productParams.pageSize.toString());\n    params.append('orderBy', productParams.orderBy.toString());\n    if (productParams.searchTerm) params.append('searchTerm', productParams.searchTerm.toString());\n    if (productParams.brands.length > 0) params.append('brands', productParams.brands.toString());\n    if (productParams.types.length > 0) params.append('types', productParams.types.toString());\n    return params;\n}\n\nexport const fetchProductsAsync = createAsyncThunk<Product[], void, {state: RootState}>(\n    'catalog/fetchProductsAsync',\n    async (_, thunkAPI) => {\n        const params = getAxiosParams(thunkAPI.getState().catalog.productParams);\n        try {\n            const response = await agent.Catalog.list(params);\n            thunkAPI.dispatch(setMetaData(response.metaData));\n            return response.items;\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchProductAsync = createAsyncThunk<Product, number>(\n    'catalog/fetchProductAsync',\n    async (productId, thunkAPI) => {\n        try {\n            return await agent.Catalog.details(productId)\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nexport const fetchFilters = createAsyncThunk(\n    'catalog/fetchFilters',\n    async (_, thunkAPI) => {\n        try {\n            return agent.Catalog.fetchFilters()\n        } catch (error: any) {\n            return thunkAPI.rejectWithValue({ error: error.data })\n        }\n    }\n)\n\nfunction initParams() {\n    return {\n        pageNumber: 1,\n        pageSize: 6,\n        orderBy: 'name',\n        brands: [],\n        types: [],\n    }\n}\n\nexport const catalogSlice = createSlice({\n    name: 'catalog',\n    initialState: productsAdapter.getInitialState<CatalogState>({\n        productsLoaded: false,\n        filtersLoaded: false,\n        status: 'idle',\n        brands: [],\n        types: [],\n        productParams: initParams(),\n        metaData: null\n    }),\n    reducers: {\n        setProductParams: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = { ...state.productParams, ...action.payload, pageNumber: 1}\n        },\n        setPageNumber: (state, action) => {\n            state.productsLoaded = false;\n            state.productParams = {...state.productParams, ...action.payload}\n        },\n        setMetaData: (state, action) => {\n            state.metaData = action.payload\n        },\n        resetProductParams: (state) => {\n            state.productParams = initParams();\n        }\n    },\n    extraReducers: (builder => {\n        builder.addCase(fetchProductsAsync.pending, (state) => {\n            state.status = 'pendingFetchProducts';\n        });\n        builder.addCase(fetchProductsAsync.fulfilled, (state, action) => {\n            productsAdapter.setAll(state, action.payload);\n            state.status = 'idle';\n            state.productsLoaded = true;\n        });\n        builder.addCase(fetchProductsAsync.rejected, (state, action) => {\n            console.log(action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.pending, (state) => {\n            state.status = 'pendingFetchProduct';\n        });\n        builder.addCase(fetchProductAsync.fulfilled, (state, action) => {\n            productsAdapter.upsertOne(state, action.payload);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchProductAsync.rejected, (state, action) => {\n            console.log(action);\n            state.status = 'idle';\n        });\n        builder.addCase(fetchFilters.pending, (state) => {\n            state.status = 'pendingFetchFilters';\n        });\n        builder.addCase(fetchFilters.fulfilled, (state, action) => {\n            state.brands = action.payload.brands;\n            state.types = action.payload.types;\n            state.filtersLoaded = true;\n        });\n        builder.addCase(fetchFilters.rejected, (state, action) => {\n            state.status = \"idle\";\n            console.log(action.payload);\n        })\n    })\n})\n\nexport const productSelectors = productsAdapter.getSelectors((state: RootState) => state.catalog);\n\nexport const { setProductParams, resetProductParams, setMetaData, setPageNumber } = catalogSlice.actions","import { createSlice } from \"@reduxjs/toolkit\"\n\nexport interface CounterState {\n    data: number;\n    title: string;\n}\n\nconst initialState: CounterState = {\n    data: 42,\n    title: 'YARC (yet another redux counter with redux toolkit)'\n}\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment: (state, action) => {\n            state.data += action.payload \n        },\n        decrement: (state, action) => {\n            state.data -= action.payload \n        }\n    }\n})\n\nexport const {increment, decrement} = counterSlice.actions;","import { configureStore } from \"@reduxjs/toolkit\";\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport { accountSlice } from \"../../features/account/accountSlice\";\nimport { basketSlice } from \"../../features/basket/basketSlice\";\nimport { catalogSlice } from \"../../features/catalog/catalogSlice\";\nimport { counterSlice } from \"../../features/contact/counterSlice\";\n\n// export function configureStore() {\n//     return createStore(counterReducer)\n// }\n\nexport const store = configureStore({\n    reducer: {\n        counter: counterSlice.reducer,\n        basket: basketSlice.reducer,\n        catalog: catalogSlice.reducer,\n        account: accountSlice.reducer\n    }\n})\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { PaginatedResponse } from \"../models/pagination\";\nimport { store } from \"../store/configureStore\";\n\nconst sleep = () => new Promise(resolve => setTimeout(resolve, 500))\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\naxios.defaults.withCredentials = true;\n\nconst responseBody = (response: AxiosResponse) => response.data\n\naxios.interceptors.request.use(config => {\n    const token = store.getState().account.user?.token;\n    if (token) config.headers.Authorization = `Bearer ${token}`;\n    return config;\n})\n\naxios.interceptors.response.use(async response => {\n    if (process.env.NODE_ENV === 'development') await sleep();\n    const pagination = response.headers['pagination'];\n    if(pagination) {\n        response.data = new PaginatedResponse(response.data, JSON.parse(pagination))\n        return response\n    }\n    return response\n}, (error: AxiosError) => {\n    const { data, status } = error.response!;\n    switch (status) {\n        case 400:\n            if (data.errors) {\n                const modelStateErrors: string[] = [];\n                for (const key in data.errors) {\n                    if (data.errors[key]) {\n                        modelStateErrors.push(data.errors[key])\n                    }\n                }\n                throw modelStateErrors.flat();\n\n            }\n            toast.error(data.title)\n            break;\n        case 401:\n            toast.error(data.title)\n            break;\n        case 500:\n            history.push({\n                pathname: '/server-error',\n                state: { error: data },\n            })\n            break;\n        default:\n            break;\n    }\n    return Promise.reject(error.response);\n})\n\n\n\nconst requests = {\n    get: (url: string, params?: URLSearchParams) => axios.get(url, {params}).then(responseBody),\n    post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\n    put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\n    delete: (url: string) => axios.delete(url).then(responseBody),\n}\n\nconst Catalog = {\n    list: (params: URLSearchParams) => requests.get('products', params),\n    details: (id: number) => requests.get(`products/${id}`),\n    fetchFilters: () => requests.get('products/filters')\n}\n\nconst TestErrors = {\n    get400Error: () => requests.get('buggy/bad-request'),\n    get401Error: () => requests.get('buggy/unauthorized'),\n    get404Error: () => requests.get('buggy/not-found'),\n    get500Error: () => requests.get('buggy/server-error'),\n    getValidationError: () => requests.get('buggy/validation-error'),\n}\n\nconst Basket = {\n    get: () => requests.get('basket'),\n    addItem: (productId: number, quantity = 1) => requests.post(`basket?productId=${productId}&quantity=${quantity}`, {}),\n    removeItem: (productId: number, quantity = 1) => requests.delete(`basket?productId=${productId}&quantity=${quantity}`)\n}\n\nconst Account = {\n    login: (values: any) => requests.post('account/login', values),\n    register: (values: any) => requests.post('account/register', values),\n    currentUser: () => requests.get('account/currentUser'),\n    fetchAddress: () => requests.get('account/savedAddress')\n\n}\n\nconst Orders = {\n    list: () => requests.get('orders'),\n    fetch: (id: number) => requests.get(`orders/${id}`),\n    create: (values: any) => requests.post('orders', values)\n}\n\nconst Payments = {\n    createPaymentIntent: () => requests.post('payments', {})\n}\n\nconst agent = {\n    Catalog,\n    TestErrors,\n    Basket,\n    Account, \n    Orders,\n    Payments\n}\n\nexport default agent","import { Alert, AlertTitle, Button, ButtonGroup, Container, List, ListItemText, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport agent from '../../app/api/agent';\n\nexport default function AboutPage() {\n    const [validationErrors, setValidationErrors] = useState<string[]>([]);\n\n    function getValidationError() {\n        agent.TestErrors.getValidationError()\n        .then(() => console.log('should not see this'))\n        .catch(error => setValidationErrors(error));\n    }\n  return (\n    <Container>\n      <Typography gutterBottom variant=\"h2\">\n        Errors for testing purposes\n      </Typography>\n      <ButtonGroup fullWidth>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get400Error().catch((error) => console.log(error))\n          }\n        >\n          Test 400 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get401Error().catch((error) => console.log(error))\n          }\n        >\n          Test 401 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get404Error().catch((error) => console.log(error))\n          }\n        >\n          Test 404 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() =>\n            agent.TestErrors.get500Error().catch((error) => console.log(error))\n          }\n        >\n          Test 500 Error\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={getValidationError}\n        >\n          Test Validation Error\n        </Button>\n      </ButtonGroup>\n      {validationErrors.length > 0 && \n      <Alert severity='error'>\n          <AlertTitle>Validation Errors</AlertTitle>\n          <List>\n              {validationErrors.map(error => (\n                  <ListItemText>{error}</ListItemText>\n              ))}\n          </List>\n      </Alert>\n      }\n    </Container>\n  );\n}\n","import { Box, Typography, Pagination } from '@mui/material';\nimport { MetaData } from '../models/pagination';\n\ninterface Props {\n  metaData: MetaData;\n  onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({metaData, onPageChange}: Props) {\n  const { currentPage, totalCount, totalPages, pageSize } = metaData;\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Typography>\n        Displaying {(currentPage - 1) * pageSize + 1}-\n        {currentPage * pageSize > totalCount\n          ? totalCount\n          : currentPage * pageSize}{' '}\n        of {totalCount} items\n      </Typography>\n      <Pagination\n        color=\"secondary\"\n        size=\"large\"\n        count={totalPages}\n        page={currentPage}\n        onChange={(e, page) => onPageChange(page)}\n      />\n    </Box>\n  );\n}\n","import { FormGroup, FormControlLabel, Checkbox } from \"@mui/material\";\nimport { useState } from \"react\";\n\ninterface Props {\n    items: string[];\n    checked?: string[];\n    onChange: (items: string[]) => void;\n}\n\nexport default function CheckboxButtons({items, checked, onChange}: Props) {\n    const [checkedItems, setCheckedItems] = useState(checked || [])\n\n    function handleChecked(value: string) {\n        const currentIndex = checkedItems.findIndex(item => item === value);\n        let newChecked: string[] = [];\n        if (currentIndex === - 1) newChecked = [...checkedItems, value];\n        else newChecked = checkedItems.filter(item => item !== value)\n        setCheckedItems(newChecked)\n        onChange(newChecked)\n    }\n\n    return (\n        <FormGroup>\n            {items.map((item) => (\n              <FormControlLabel\n                control={<Checkbox \n                checked={checkedItems.indexOf(item) !== -1}\n                onClick={() => handleChecked(item)}\n                />}\n                label={item}\n                key={item}\n              />\n            ))}\n          </FormGroup>\n    )\n}\n","import { FormControl, RadioGroup, FormControlLabel, Radio } from \"@mui/material\";\n\ninterface Props {\n    options: any[];\n    onChange: (event: any) => void;\n    selectedValue: string;\n}\n\nexport default function RadioButtonGroup({options, onChange, selectedValue}: Props) {\n    return (\n        <FormControl component=\"fieldset\">\n            <RadioGroup onChange={onChange} value={selectedValue}>\n              {options.map(({ value, label }) => (\n                <FormControlLabel\n                  value={value}\n                  control={<Radio />}\n                  label={label}\n                  key={value}\n                />\n              ))}\n            </RadioGroup>\n          </FormControl>\n    )\n}\n","import { Backdrop, CircularProgress,  Box, Typography } from \"@mui/material\"\n\ninterface Props {\n    message?: string;\n}\n\nexport default function LoadingComponent({message= 'Loading...'} : Props) {\n    return (\n        <Backdrop open={true} invisible={true}>\n            <Box display='flex' justifyContent='center' alignItems='center' height='100vh'>\n                <CircularProgress size={100} color=\"secondary\"/>\n                <Typography variant=\"h4\" sx={{justifyContent: 'center', position: 'fixed', top: '60%'}}>{message}</Typography>\n            </Box>\n        </Backdrop>\n    )\n}","import { LoadingButton } from '@mui/lab';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { Product } from '../../app/models/product';\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\nimport { currencyFormat } from '../../app/util/util';\nimport { addBasketItemAsync } from '../basket/basketSlice';\n\ninterface Props {\n  product: Product;\n}\n\nexport default function ProductCard({ product }: Props) {\n  const {status} = useAppSelector(state => state.basket)\n  const dispatch = useAppDispatch();\n\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar sx={{ bgcolor: 'secondary.main' }}>\n            {product.name.charAt(0).toLocaleUpperCase()}\n          </Avatar>\n        }\n        title={product.name}\n        titleTypographyProps={{\n          sx: { fontWeight: 'bold', color: 'primary.main' },\n        }}\n      />\n      <CardMedia\n        sx={{\n          height: 140,\n          backgroundSize: 'contain',\n          bgcolor: 'primary.light',\n        }}\n        image={product.pictureUrl}\n        title={product.name}\n      />\n      <CardContent>\n        <Typography gutterBottom color=\"secondary\" variant=\"h5\">\n          {currencyFormat(product.price)}\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {product.brand} / {product.type}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <LoadingButton\n          loading={status.includes('pending' + product.id)}\n          onClick={() => dispatch(addBasketItemAsync({productId: product.id}))}\n          size=\"small\"\n        >\n          Add to Cart\n        </LoadingButton>\n        <Button component={Link} to={`/catalog/${product.id}`} size=\"small\">\n          View\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import {\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    Grid,\n    Skeleton\n} from \"@mui/material\";\n\nexport default function ProductCardSkeleton() {\n    return (\n        <Grid item xs component={Card}>\n            <CardHeader\n                avatar={\n                    <Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />\n                }\n                title={\n                    <Skeleton\n                        animation=\"wave\"\n                        height={10}\n                        width=\"80%\"\n                        style={{ marginBottom: 6 }}\n                    />\n                }\n            />\n            <Skeleton sx={{ height: 190 }} animation=\"wave\" variant=\"rectangular\" />\n            <CardContent>\n                <>\n                    <Skeleton animation=\"wave\" height={10} style={{ marginBottom: 6 }} />\n                    <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </>\n            </CardContent>\n            <CardActions>\n                <>\n                    <Skeleton animation=\"wave\" height={10} width='40%' />\n                    <Skeleton animation=\"wave\" height={10} width=\"20%\" />\n                </>\n            </CardActions>\n        </Grid>\n    )\n}","import { Grid } from '@mui/material';\nimport { Product } from '../../app/models/product';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport ProductCard from './ProductCard';\nimport ProductCardSkeleton from './ProductCardSkeleton';\n\ninterface Props {\n  products: Product[];\n}\n\nexport default function ProductList({ products }: Props) {\n  const { productsLoaded } = useAppSelector((state) => state.catalog);\n  return (\n    <>\n      <Grid container spacing={4}>\n        {products.map((product) => (\n          <Grid item xs={4} key={product.id}>\n            {!productsLoaded ? (\n              <ProductCardSkeleton />\n            ) : (\n              <ProductCard product={product} />\n            )}\n          </Grid>\n        ))}\n      </Grid>\n    </>\n  );\n}\n","import { debounce, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { setProductParams } from \"./catalogSlice\";\n\nexport default function ProductSearch() {\n    const {productParams} = useAppSelector(state => state.catalog);\n    const [searchTerm, setSearchTerm] = useState(productParams.searchTerm)\n    const dispatch = useAppDispatch();\n\n    const debouncedSearch = debounce((event: any) => {\n        dispatch(setProductParams({searchTerm: event.target.value}))\n    }, 1000)\n\n    return (\n        <TextField \n        label=\"Search products\" \n        variant=\"outlined\" \n        fullWidth \n        value={searchTerm || ''}\n        onChange={(event : any) => {\n            setSearchTerm(event.target.value);\n            debouncedSearch(event);\n        }}\n        />\n    )\n}\n","import {\n  Grid,\n  Paper,\n} from '@mui/material';\nimport { useEffect } from 'react';\nimport AppPagination from '../../app/components/AppPagination';\nimport CheckboxButtons from '../../app/components/CheckboxButtons';\nimport RadioButtonGroup from '../../app/components/RadioButtonGroup';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\nimport {\n  fetchFilters,\n  fetchProductsAsync,\n  productSelectors,\n  setPageNumber,\n  setProductParams,\n} from './catalogSlice';\nimport ProductList from './ProductList';\nimport ProductSearch from './ProductSearch';\n\nconst sortOptions = [\n  { value: 'name', label: 'Alphabetical' },\n  { value: 'priceDesc', label: 'Price - High to Low' },\n  { value: 'price', label: 'Price - Low to High' },\n];\n\nexport default function Catalog() {\n  const products = useAppSelector(productSelectors.selectAll);\n  const { productsLoaded, filtersLoaded, brands, types, productParams, metaData } =\n    useAppSelector((state) => state.catalog);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!productsLoaded) dispatch(fetchProductsAsync());\n  }, [productsLoaded, dispatch]);\n\n  useEffect(() => {\n    if (!filtersLoaded) dispatch(fetchFilters());\n  }, [filtersLoaded, dispatch]);\n\n  if (!filtersLoaded)\n    return <LoadingComponent message=\"Loading products\" />;\n\n  return (\n    <Grid container columnSpacing={4}>\n      <Grid item xs={3}>\n        <Paper sx={{ mb: 2 }}>\n          <ProductSearch />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <RadioButtonGroup \n          selectedValue={productParams.orderBy}\n          options={sortOptions}\n          onChange={(e) => dispatch(setProductParams({orderBy: e.target.value}))}\n          />\n        </Paper>\n        <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckboxButtons \n          items={brands}\n          checked={productParams.brands}\n          onChange={(items: string[]) => dispatch(setProductParams({ brands: items }))}\n          />\n          </Paper>\n          <Paper sx={{ mb: 2, p: 2 }}>\n          <CheckboxButtons \n          items={types}\n          checked={productParams.types}\n          onChange={(items: string[]) => dispatch(setProductParams({ types: items }))}\n          />\n        </Paper>\n      </Grid>\n      <Grid item xs={9}>\n        <ProductList products={products} />\n      </Grid>\n      <Grid item xs={3} />\n      <Grid item xs={9} sx={{mb: 2}}>\n    { metaData && <AppPagination \n      metaData={metaData}\n      onPageChange={(page: number) => dispatch(setPageNumber({pageNumber: page}))}\n      />}\n      </Grid>\n    </Grid>\n  );\n}\n","import { Button, Container, Divider, Paper, Typography } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nexport default function NotFound() {\n    return (\n        <Container component={Paper}>\n            <Typography gutterBottom variant='h3'>Opps - we could not find what you are looking for</Typography>\n            <Divider />\n            <Button fullWidth component={Link} to='/catalog'>Go back to the store</Button>\n        </Container>\n    )\n}\n","import { LoadingButton } from '@mui/lab';\nimport {\n  Divider,\n  Grid,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport NotFound from '../../app/errors/NotFound';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\nimport { addBasketItemAsync, removeBasketItemAsync } from '../basket/basketSlice';\nimport { fetchProductAsync, productSelectors } from './catalogSlice';\n\nexport default function ProductDetails() {\n  const {basket, status} = useAppSelector(state => state.basket);\n  const dispatch = useAppDispatch();\n  const { id } = useParams<{ id: string }>();\n  const product = useAppSelector(state => productSelectors.selectById(state, id));\n  const {status: productStatus} = useAppSelector(state => state.catalog);\n  const [quantity, setQuantity] = useState(0);\n  const item = basket?.items.find((i) => i.productId === product?.id);\n\n  useEffect(() => {\n    if (item) setQuantity(item.quantity);\n   if(!product) dispatch(fetchProductAsync(parseInt(id)))\n  }, [id, item, dispatch, product]);\n\n  function handleInputChange(event: any) {\n      if(event.target.value >= 0) {\n        setQuantity(parseInt(event.target.value))\n      }\n      \n  }\n\n  function handleUpdateCart() {\n      if (!item || quantity > item.quantity) {\n        const updatedQuantity = item ? quantity - item.quantity : quantity;\n       dispatch(addBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n      } else {\n          const updatedQuantity = item.quantity - quantity;\n          dispatch(removeBasketItemAsync({productId: product?.id!, quantity: updatedQuantity}))\n      }\n  }\n\n  if (productStatus.includes('pending')) return <LoadingComponent message=\"Loading product...\" />;\n\n  if (!product) return <NotFound />;\n\n  return (\n    <Grid container spacing={6}>\n      <Grid item xs={6}>\n        <img\n          src={product.pictureUrl}\n          alt={product.name}\n          style={{ width: '100%' }}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <Typography variant=\"h3\">{product.name}</Typography>\n        <Divider sx={{ mb: 2 }} />\n        <Typography variant=\"h4\" color=\"secondary\">\n          ${(product.price / 100).toFixed(2)}\n        </Typography>\n        <TableContainer>\n          <Table>\n            <TableBody>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>{product.name}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Description</TableCell>\n                <TableCell>{product.description}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Type</TableCell>\n                <TableCell>{product.type}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Brand</TableCell>\n                <TableCell>{product.brand}</TableCell>\n              </TableRow>\n              <TableRow>\n                <TableCell>Stock</TableCell>\n                <TableCell>{product.quantityInStock}</TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <TextField\n            onChange={handleInputChange}\n              variant=\"outlined\"\n              type=\"number\"\n              label=\"Quantity in Cart\"\n              fullWidth\n              value={quantity}\n            />\n          </Grid>\n          <Grid item xs={6}>\n            <LoadingButton\n            disabled={(item?.quantity === quantity) || (!item && quantity === 0)} \n            loading={status.includes('pending')}\n            onClick={handleUpdateCart}\n              sx={{ height: '55px' }}\n              color=\"primary\"\n              size=\"large\"\n              variant=\"contained\"\n              fullWidth\n            >\n              {item ? 'Update Quantity' : 'Add to Cart'}\n            </LoadingButton>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { Button, ButtonGroup, Typography } from \"@mui/material\";\nimport { useAppDispatch, useAppSelector } from \"../../app/store/configureStore\";\nimport { decrement, increment } from \"./counterSlice\";\n\n\nexport default function ContactPage() {\n    const dispatch = useAppDispatch();\n    const {data, title} = useAppSelector(state => state.counter)\n    return (\n        <>\n        <Typography variant=\"h2\">\n            {title}\n        </Typography>\n        <Typography variant=\"h5\">\n            The data is: {data}\n        </Typography>\n        <ButtonGroup>\n            <Button onClick={() => dispatch(decrement(1))} variant='contained' color='error'>Decrement</Button>\n            <Button onClick={() => dispatch(increment(1))}  variant='contained' color='primary'>Increment</Button>\n            <Button onClick={() => dispatch(increment(5))}  variant='contained' color='secondary'>Increment by 5</Button>\n        </ButtonGroup>\n        </>\n    )\n}","import { Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport Slider from 'react-slick'\n\nexport default function HomePage() {\n    const settings = {\n        dots: true,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1\n      };\n    return (\n      <>\n      <Slider {...settings}>\n          <div>\n              <img src=\"/images/hero1.jpg\" alt=\"hero\" style={{display: 'block', width: \"100%\", maxHeight: 500}} />\n          </div>\n          <div>\n              <img src=\"/images/hero2.jpg\" alt=\"hero\" style={{display: 'block', width: \"100%\", maxHeight: 500}} />\n          </div>\n          <div>\n              <img src=\"/images/hero3.jpg\" alt=\"hero\" style={{display: 'block', width: \"100%\", maxHeight: 500}} />\n          </div>\n      </Slider>\n      <Box display='flex' justifyContent='center' sx={{p: 4}}>\n       <Typography variant=\"h1\">\n       Welcome to the shop!!\n       </Typography>\n        </Box>\n      </>\n    )\n}","import { Button, Menu, Fade, MenuItem } from \"@mui/material\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { signOut } from \"../../features/account/accountSlice\";\nimport { clearBasket } from \"../../features/basket/basketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function SignedInMenu() {\n    const dispatch = useAppDispatch();\n    const { user } = useAppSelector(state => state.account);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleClick = (event: any) => {\n      setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    return (\n      <>\n        <Button \n        color=\"inherit\"\n        onClick={handleClick} \n        sx={{typography: 'h6'}}\n        \n        >\n          {user?.email}\n        </Button>\n        <Menu\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          TransitionComponent={Fade}\n        >\n          <MenuItem onClick={handleClose}>Profile</MenuItem>\n          <MenuItem component={Link} to=\"/orders\"> My orders</MenuItem>\n          <MenuItem onClick={() => {\n          dispatch(signOut());\n          dispatch(clearBasket())\n          }}>Logout</MenuItem>\n        </Menu>\n      </>\n    );\n        }","import { ShoppingCart } from '@mui/icons-material';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  Switch,\n  Toolbar,\n  Typography,\n} from '@mui/material';\nimport { Link, NavLink } from 'react-router-dom';\nimport { useAppSelector } from '../store/configureStore';\nimport SignedInMenu from './SignedInMenu';\n\ninterface Props {\n  darkMode: boolean;\n  handleThemeChange: () => void;\n}\n\nconst midLinks = [\n  { title: 'catalog', path: '/catalog' },\n  { title: 'about', path: '/about' },\n  { title: 'contact', path: '/contact' },\n];\n\nconst rightLinks = [\n  { title: 'login', path: '/login' },\n  { title: 'register', path: '/register' },\n];\n\nconst navStyles = {\n  color: 'inherit',\n  textDecoration: 'none',\n  typography: 'h6',\n  '&:hover': {\n    color: 'grey.500',\n  },\n  '&.active': {\n    color: 'text.secondary',\n  },\n};\n\nexport default function Header({ darkMode, handleThemeChange }: Props) {\n  const { basket } = useAppSelector((state) => state.basket);\n  const { user } = useAppSelector((state) => state.account);\n  const itemCount = basket?.items.reduce((sum, item) => sum + item.quantity, 0);\n  return (\n    <AppBar position=\"static\" >\n      <Toolbar\n        sx={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n        }}\n      >\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography\n            variant=\"h6\"\n            component={NavLink}\n            sx={navStyles}\n            exact\n            to=\"/\"\n          >\n            Re-Store\n          </Typography>\n          <Switch checked={darkMode} onChange={handleThemeChange} />\n        </Box>\n        <Box>\n          <List sx={{ display: 'flex' }}>\n            {midLinks.map(({ title, path }) => (\n              <ListItem component={NavLink} to={path} key={path} sx={navStyles}>\n                {title.toLocaleUpperCase()}\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconButton\n            component={Link}\n            to=\"/basket\"\n            size=\"large\"\n            sx={{ color: 'inherit' }}\n          >\n            <Badge badgeContent={itemCount} color=\"secondary\">\n              <ShoppingCart />\n            </Badge>\n          </IconButton>\n          {user ? (\n            <SignedInMenu />\n          ) : (\n            <List sx={{ display: 'flex' }}>\n              {rightLinks.map(({ title, path }) => (\n                <ListItem\n                  component={NavLink}\n                  to={path}\n                  key={path}\n                  sx={navStyles}\n                >\n                  {title.toLocaleUpperCase()}\n                </ListItem>\n              ))}\n            </List>\n          )}\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { Button, Container, Divider, Paper, Typography } from '@mui/material';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nexport default function ServerError() {\n  const history = useHistory();\n  const { state } = useLocation<any>();\n\n\n  return (\n    <Container component={Paper}>\n      {state?.error   ? (\n        <>\n          <Typography variant=\"h3\" color=\"error\" gutterBottom>\n          {state.error.title} \n          </Typography>\n          <Divider />\n          <Typography>\n            {state.error.detail || 'Internal Server error'}\n          </Typography>\n        </>\n      ) : (\n        <Typography variant=\"h5\" gutterBottom>\n          Server error\n        </Typography>\n      )}\n      <Button onClick={() => history.push('/catalog')}>\n        Go back to the store\n      </Button>\n    </Container>\n    \n  );\n  \n}\n","import { TableContainer, Paper, Table, TableBody, TableRow, TableCell} from \"@mui/material\";\nimport { useAppSelector } from \"../../app/store/configureStore\";\nimport { currencyFormat } from '../../app/util/util';\n\ninterface Props {\n    subtotal?: number;\n}\n\n\nexport default function BasketSummary({subtotal}: Props) {\n    const {basket} = useAppSelector(state => state.basket);\n    if (subtotal === undefined)\n     subtotal = basket?.items.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n\n    const deliveryFee = subtotal > 10000 ? 0 : 500;\n\n    return (\n        <>\n            <TableContainer component={Paper} variant={'outlined'}>\n                <Table>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell colSpan={2}>Subtotal</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Delivery fee*</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell colSpan={2}>Total</TableCell>\n                            <TableCell align=\"right\">{currencyFormat(subtotal + deliveryFee)}</TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell>\n                                <span style={{fontStyle: 'italic'}}>*Orders over $100 qualify for free delivery</span>\n                            </TableCell>\n                        </TableRow>\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </>\n    )\n}","import { Add, Remove, Delete } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Box } from \"@mui/material\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { useAppSelector, useAppDispatch } from \"../../app/store/configureStore\";\nimport { addBasketItemAsync, removeBasketItemAsync } from \"./basketSlice\";\n\ninterface Props {\n    items: BasketItem[];\n    isBasket?: boolean;\n}\n\nexport default function BasketTable({items, isBasket = true}: Props) {\n    const {status} = useAppSelector(state => state.basket);\n    const dispatch = useAppDispatch();\n    return (\n        <TableContainer component={Paper}>\n        <Table sx={{ minWidth: 650 }}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"right\">Price</TableCell>\n              <TableCell align=\"center\">Quantity</TableCell>\n              <TableCell align=\"right\">Subtotal</TableCell>\n             {isBasket && <TableCell align=\"right\"></TableCell>}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {items.map((item) => (\n              <TableRow\n                key={item.productId}\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <img\n                      src={item.pictureUrl}\n                      alt={item.name}\n                      style={{ height: 50, marginRight: 20 }}\n                    />\n                    {item.name}\n                  </Box>\n                </TableCell>\n                <TableCell align=\"right\">\n                  {(item.price / 100).toFixed(2)}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {isBasket && <LoadingButton\n                    loading={status === 'pendingAddItem' + item.productId }\n                    onClick={() => dispatch(addBasketItemAsync({productId: item.productId}))}\n                    color=\"secondary\"\n                  >\n                    <Add />\n                  </LoadingButton>}\n                  {item.quantity}\n                 {isBasket &&  <LoadingButton\n                         loading={status === 'pendingRemoveItem' + item.productId + 'rem'}\n                         onClick={() => dispatch(removeBasketItemAsync({productId: item.productId, quantity: 1, name: 'rem'}))}\n                    color=\"error\"\n                  >\n                    <Remove />\n                  </LoadingButton> }\n                </TableCell>\n                 <TableCell align=\"right\">\n                  {((item.price / 100) * item.quantity).toFixed(2)} \n                </TableCell> \n                {isBasket && <TableCell align=\"right\">\n                  <LoadingButton\n                    loading={status.includes('pendingRemoveItem' + item.productId + 'del')}\n                    onClick={() => dispatch(removeBasketItemAsync({\n                      productId: item.productId, quantity: item.quantity, name: 'del'}))}\n                    color=\"error\"\n                  >\n                    <Delete />\n                  </LoadingButton>\n                </TableCell>}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    )\n}\n","import {\n  Button,\n  Grid,\n  Typography,\n} from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from './BasketSummary';\nimport BasketTable from './BasketTable';\n\nexport default function BasketPage() {\n  const { basket} = useAppSelector(state => state.basket);\n\n  if (!basket) return <Typography variant=\"h3\">Your Cart is empty</Typography>;\n  return (\n    <>\n   <BasketTable items={basket.items}/>\n    <Grid container>\n      <Grid item xs={6}/>\n      <Grid item xs={6}>\n        <BasketSummary />\n        <Button\n        component={Link}\n        to='/checkout'\n        variant='contained'\n        size='large'\n        fullWidth\n        >Checkout</Button>\n      </Grid>\n    </Grid>\n    </>\n  );\n}\n","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { FieldValues, useForm } from 'react-hook-form'\nimport { LoadingButton } from '@mui/lab';\nimport { useAppDispatch } from '../../app/store/configureStore';\nimport { signInUser } from './accountSlice';\n\n\n\nexport default function Login() {\n    const history = useHistory();\n    const location = useLocation<any>();\n    const dispatch = useAppDispatch();\n    const {register, handleSubmit, formState: {isSubmitting, errors, isValid}} = useForm({\n        mode: 'all'\n    })\n\n    async function submitForm(data: FieldValues) {\n      try {\n        await dispatch(signInUser(data));\n        history.push(location.state?.from?.pathname || '/catalog')\n      } catch (error) {\n        console.log(error)\n        \n      }\n        \n        \n    }\n\n  return (\n      <Container component={Paper} maxWidth=\"sm\" sx={{display: 'flex', flexDirection: 'column', alignItems: 'center', p: 4}}>\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box component=\"form\" onSubmit={handleSubmit(submitForm)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Username\"\n              autoFocus\n              {...register('username', {required: 'Username is required'})}\n              error={!!errors.username}\n              helperText={errors?.username?.message}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              {...register('password', {required: 'Password is required'})}\n              error={!!errors.password}\n              helperText={errors?.username?.message}\n            />\n            <LoadingButton\n            loading={isSubmitting}\n            disabled={!isValid}  \n            type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </LoadingButton>\n            <Grid container>\n              <Grid item>\n                <Link to='/register'>\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n      </Container>\n  );\n}","import Avatar from '@mui/material/Avatar';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { Paper } from '@mui/material';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { LoadingButton } from '@mui/lab';\nimport agent from '../../app/api/agent';\nimport { toast } from 'react-toastify';\n\n\nexport default function Register() {\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState: { isSubmitting, errors, isValid },\n  } = useForm({\n    mode: 'all',\n  });\n\n  function handleApiErrors(errors: any) {\n    if (errors) {\n        errors.forEach((error: string) => {\n            if (error.includes('Password')) {\n                setError('password', { message: error })\n            } else if (error.includes('Email')) {\n                setError('email', { message: error })\n            } else if (error.includes('Username')) {\n                setError('username', { message: error })\n            }\n        });\n    }\n    console.log(errors)\n}\n\n  return (\n    <Container\n      component={Paper}\n      maxWidth=\"sm\"\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        p: 4,\n      }}\n    >\n      <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n        <LockOutlinedIcon />\n      </Avatar>\n      <Typography component=\"h1\" variant=\"h5\">\n        Register\n      </Typography>\n      <Box\n        component=\"form\"\n        onSubmit={handleSubmit((data) => agent.Account.register(data)\n            .then(() => {\n                toast.success('Registration successful - you can now login')\n                history.push('/login')\n            })\n            .catch(error => handleApiErrors(error)))}\n        noValidate sx={{ mt: 1 }}\n      >\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Username\"\n          autoFocus\n          {...register('username', { required: 'Username is required' })}\n          error={!!errors.username}\n          helperText={errors?.username?.message}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Email address\"\n          {...register('email', { required: 'Email is required',\n            pattern: {\n                value: /^\\w+[\\w-.]*@\\w+((-\\w+)|(\\w*))\\.[a-z]{2,3}$/,\n                message: 'Not a valid email address'\n            }\n        })}\n          error={!!errors.email}\n          helperText={errors?.email?.message}\n        />\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Password\"\n          type=\"password\"\n          {...register('password', { required: 'Password is required',\n          pattern: {\n              value: /(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$/,\n              message: \"Password does not meet complexity requirements\"\n          } \n         })}\n          error={!!errors.password}\n          helperText={errors?.password?.message}\n        />\n        <LoadingButton\n          loading={isSubmitting}\n          disabled={!isValid}\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          sx={{ mt: 3, mb: 2 }}\n        >\n          Register\n        </LoadingButton>\n        <Grid container>\n          <Grid item>\n            <Link to=\"/login\">{\"Already have an account? Sign in\"}</Link>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n}\n","import { ComponentType } from \"react\";\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\n\ninterface Props extends RouteProps {\n    component: ComponentType<RouteComponentProps<any>> | ComponentType<any>\n}\n\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\n    const {user} = useAppSelector(state => state.account);\n    return (\n      <Route\n        {...rest}\n        render={props =>\n          user ? (\n            <Component {...props} />\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }","import { Button, Grid, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { BasketItem } from \"../../app/models/basket\";\nimport { Order } from \"../../app/models/order\";\nimport BasketSummary from \"../basket/BasketSummary\";\nimport BasketTable from \"../basket/BasketTable\";\n\ninterface Props {\n    order: Order;\n    setSelectedOrder: (id: number) => void;\n}\n\nexport default function OrderDetailed({ order, setSelectedOrder }: Props) {\n    const subtotal = order.orderItems.reduce((sum, item) => sum + (item.quantity * item.price), 0) ?? 0;\n    return (\n        <>\n            <Box display='flex' justifyContent='space-between'>\n                <Typography sx={{ p: 2 }} gutterBottom variant='h4'>Order# {order.id} - {order.orderStatus}</Typography>\n                <Button onClick={() => setSelectedOrder(0)} sx={{ m: 2 }} size='large' variant='contained'>Back to orders</Button>\n            </Box>\n            <BasketTable items={order.orderItems as BasketItem[]} isBasket={false} />\n            <Grid container>\n                <Grid item xs={6} />\n                <Grid item xs={6}>\n                    <BasketSummary subtotal={subtotal} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}","import { TableContainer, Paper, Table, TableHead, TableRow, TableCell, TableBody, Button } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { Order } from \"../../app/models/order\";\nimport { currencyFormat } from \"../../app/util/util\";\nimport OrderDetailed from \"./OrderDetailed\";\n\nexport default function Orders() {\n    const [orders, setOrders] = useState<Order[] | null>(null);\n    const [loading, setLoading] = useState(true);\n    const [selectedOrderNumber, setSelectedOrderNumber] = useState(0);\n\n\n    useEffect(() => {\n    setLoading(true);\n    agent.Orders.list()\n        .then(orders => setOrders(orders))\n        .catch(error => console.log(error))\n        .finally(() => setLoading(false))\n    }, [])\n\n    if (loading) return <LoadingComponent message=\"Loading orders...\" />\n\n    if (selectedOrderNumber > 0 ) return (\n      <OrderDetailed \n      order={orders?.find(o => o.id === selectedOrderNumber)!}\n      setSelectedOrder={setSelectedOrderNumber}\n      />\n    )\n\n\n\n        return (\n            <TableContainer component={Paper}>\n            <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Order Number</TableCell>\n                  <TableCell align=\"right\">Total</TableCell>\n                  <TableCell align=\"right\">Order Date</TableCell>\n                  <TableCell align=\"right\">Order Status</TableCell>\n                  <TableCell align=\"right\"></TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {orders?.map((order) => (\n                  <TableRow\n                    key={order.id}\n                    sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                  >\n                    <TableCell component=\"th\" scope=\"row\">\n                      {order.id}\n                    </TableCell>\n                    <TableCell align=\"right\">{currencyFormat(order.total)}</TableCell>\n                    <TableCell align=\"right\">{order.orderDate.split('T')[0]}</TableCell>\n                    <TableCell align=\"right\">{order.orderStatus}</TableCell>\n                    <TableCell align=\"right\">\n                      <Button onClick={() => setSelectedOrderNumber(order.id)}>View</Button>\n                      </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n    )\n}\n","import { TextField } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n    label: string;\n\n}\n\nexport default function AppTextInput(props: Props) {\n    const {fieldState, field} = useController({...props, defaultValue: ''})\n    return (\n        <TextField\n            {...props}\n            {...field}\n           \n            fullWidth\n            variant='outlined'\n            error={!!fieldState.error}\n            helperText={fieldState.error?.message}\n        />\n    )\n}\n","import { Checkbox, FormControlLabel } from \"@mui/material\";\nimport { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps{\n    label: string;\n    disabled: boolean;\n}\n\nexport default function AppCheckbox(props: Props) {\n    const {field} = useController({...props, defaultValue: false})\n    \n    return (\n       <FormControlLabel\n       control={\n           <Checkbox\n           {...field}\n           checked={field.value}\n           color='secondary'\n           disabled={props.disabled}\n           />\n       }\n       label={props.label}\n       />\n    )\n}\n","import Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport AppCheckbox from '../../app/components/AppCheckbox';\n\nexport default function AddressForm() {\n  const { control, formState } = useFormContext();\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping address\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={12}>\n          <AppTextInput control={control} name='fullName'label='Full name' />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n        <AppTextInput control={control} name='address1'label='Address 1' />\n        </Grid>\n        <Grid item xs={12} sm={12}>\n        <AppTextInput control={control} name='address2'label='Address 2' />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <AppTextInput control={control} name='city'label='City' />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <AppTextInput control={control} name='state'label='State' />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <AppTextInput control={control} name='zip'label='Zip' />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n        <AppTextInput control={control} name='country'label='Country' />\n        </Grid>\n        <Grid item xs={12}>\n          <AppCheckbox \n          disabled={!formState.isDirty}\n          name=\"saveAddress\"\n           label='Save this as default address'\n            control={control}\n            />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n","import { InputBaseComponentProps } from \"@mui/material\";\nimport { forwardRef, Ref, useImperativeHandle, useRef } from \"react\";\n\ninterface Props extends InputBaseComponentProps{}\n\nexport const StripeInput = forwardRef(function StripeInput({component: Component, ...props}: Props,\n     ref: Ref<unknown>){\n        const elementRef = useRef<any>();\n\n        useImperativeHandle(ref, () => ({\n            focus: () => elementRef.current.focus\n        }));\n\n        return (\n            <Component \n            onReady={(element: any) => elementRef.current = element}\n            {...props}\n            />\n        )\n})","import Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport { useFormContext } from 'react-hook-form';\nimport AppTextInput from '../../app/components/AppTextInput';\nimport { StripeInput } from './StripeInput';\nimport { CardCvcElement, CardExpiryElement, CardNumberElement } from '@stripe/react-stripe-js';\nimport { StripeElementType } from '@stripe/stripe-js';\n\ninterface Props {\n  cardState: {elementError: {[key in StripeElementType]?: string}};\n  onCardInputChange: (event : any) => void;\n}\n\nexport default function PaymentForm({cardState, onCardInputChange}: Props) {\n  const {control} = useFormContext()\n \n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={6}>\n          <AppTextInput name=\"nameOnCard\" label=\"Name on card\" control={control}/>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n           onChange={onCardInputChange}\n           error={!!cardState.elementError.cardNumber}\n           helperText={cardState.elementError.cardNumber}\n            id=\"cardNumber\"\n            label=\"Card number\"\n            fullWidth\n            autoComplete=\"cc-number\"\n            variant=\"outlined\"\n            InputLabelProps={{shrink: true}}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardNumberElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n             onChange={onCardInputChange}\n             error={!!cardState.elementError.cardExpiry}\n             helperText={cardState.elementError.cardExpiry}\n            id=\"expDate\"\n            label=\"Expiry date\"\n            fullWidth\n            autoComplete=\"cc-exp\"\n            variant=\"outlined\"\n            InputLabelProps={{shrink: true}}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardExpiryElement\n              }\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n             onChange={onCardInputChange}\n             error={!!cardState.elementError.cardCvc}\n             helperText={cardState.elementError.cardCvc}\n            id=\"cvv\"\n            label=\"CVV\"\n            fullWidth\n            autoComplete=\"cc-csc\"\n            variant=\"outlined\"\n            InputLabelProps={{shrink: true}}\n            InputProps={{\n              inputComponent: StripeInput,\n              inputProps: {\n                component: CardCvcElement\n              }\n            }}\n          />\n        </Grid>\n      </Grid>\n    </>\n  );\n}","import { Grid } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport { useAppSelector } from '../../app/store/configureStore';\nimport BasketSummary from '../basket/BasketSummary';\nimport BasketTable from '../basket/BasketTable';\n\nexport default function Review() {\n  const {basket} = useAppSelector(state => state.basket)\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      {basket && <BasketTable items={basket.items} isBasket={false}/>}\n    <Grid container>\n      <Grid item xs={6}/>\n      <Grid item xs={6}>\n        <BasketSummary />\n      </Grid>\n    </Grid>\n    </>\n  );\n}","import * as yup from 'yup'\n\nexport const validationSchema = [\n    yup.object ({\n    fullName: yup.string().required('Full name is required'),\n    address1: yup.string().required('Address line 1 is required'),\n    address2: yup.string().required(),\n    city: yup.string().required(),\n    state: yup.string().required(),\n    zip: yup.string().required(),\n    country: yup.string().required(),\n}),\nyup.object(),\nyup.object({\n nameOnCard: yup.string().required() \n})\n]","import {\n  Box,\n  Button,\n  Paper,\n  Step,\n  StepLabel,\n  Stepper,\n  Typography,\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport { FieldValues, FormProvider, useForm } from 'react-hook-form';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { validationSchema } from './checkoutValidation';\nimport agent from '../../app/api/agent';\nimport { useAppDispatch, useAppSelector } from '../../app/store/configureStore';\nimport { clearBasket } from '../basket/basketSlice';\nimport { LoadingButton } from '@mui/lab';\nimport { StripeElementType } from '@stripe/stripe-js';\nimport { CardNumberElement, useElements, useStripe } from '@stripe/react-stripe-js';\n\nconst steps = ['Shipping address', 'Review your order', 'Payment details'];\n\n\n\nexport default function CheckoutPage() {\n  const [activeStep, setActiveStep] = useState(0);\n  const [orderNumber, setOrderNumber] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const [cardState, setCardState] = useState<{elementError: {[key in StripeElementType]?: string}}>({elementError: {}})\n  const [cardComplete, setCardComplete] = useState<any>({cardNumber: false, cardExpiry: false, cardCvc: false});\n  const [paymentMessage, setPaymentMessage] = useState('');\n  const [paymentSucceeded, setPaymentSucceeded] = useState(false);\n  const {basket} = useAppSelector(state => state.basket);\n  const stripe = useStripe();\n  const elements = useElements();\n\n\n  function onCardInputChange(event: any) {\n    setCardState({\n      ...cardState,\n      elementError: {\n        ...cardState.elementError,\n        [event.elementType]: event.error?.message\n      }\n    })\n    setCardComplete({...cardComplete, [event.elementType]: event.complete})\n  }\n\n  function getStepContent(step: number) {\n    switch (step) {\n      case 0:\n        return <AddressForm />;\n      case 1:\n        return <Review />;\n      case 2:\n        return <PaymentForm cardState={cardState} onCardInputChange={onCardInputChange}/>;\n      default:\n        throw new Error('Unknown step');\n    }\n  }\n\n  const currentValidationSchema = validationSchema[activeStep];\n\n  const methods = useForm({\n    mode: 'all',\n    resolver: yupResolver(currentValidationSchema),\n  });\n\n  useEffect(() => {\n    agent.Account.fetchAddress()\n    .then(response => {\n      if (response) {\n        methods.reset({...methods.getValues(), ...response, saveAddress: false})\n      }\n    })\n  }, [methods])\n\n  async function submitOrder(data: FieldValues) {\n    setLoading(true)\n    const { nameOnCard, saveAddress, ...shippingAddress } = data;\n    if(!stripe || !elements) return; //stripe is not ready\n    try {\n      const cardElement = elements.getElement(CardNumberElement);\n      const paymentResult = await stripe.confirmCardPayment(basket?.clientSecret!, {\n        payment_method: {\n          card: cardElement!,\n          billing_details: {\n            name: nameOnCard\n          }\n        }\n      })\n      console.log(paymentResult)\n      if(paymentResult.paymentIntent?.status === 'succeeded'){\n        const orderNumber = await agent.Orders.create({\n          saveAddress,\n          shippingAddress,\n        });\n        setOrderNumber(orderNumber);\n        setPaymentSucceeded(true);\n        setPaymentMessage('Thank you - we have received your payment')\n        setActiveStep(activeStep + 1);\n        dispatch(clearBasket());\n        setLoading(false);\n      } else {\n        setPaymentMessage(paymentResult.error?.message!);\n        setPaymentSucceeded(false);\n        setLoading(false);\n        setActiveStep(activeStep + 1)\n      }\n    } catch (error) {\n      console.log(error)\n      setLoading(false)\n    }\n  }\n\n  const handleNext = async (data: FieldValues) => {\n    if (activeStep === steps.length - 1) {\n      await submitOrder(data)\n    } else {\n      setActiveStep(activeStep + 1);\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  function submitDisabled(): boolean {\n    if (activeStep === steps.length -1){\n      return !cardComplete.cardCvc \n          || !cardComplete.cardExpiry \n          || !cardComplete.cardNumber\n          || !methods.formState.isValid\n    } else {\n      return !methods.formState.isValid\n    }\n  }\n\n  return (\n    <FormProvider {...methods}>\n      <Paper\n        variant=\"outlined\"\n        sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}\n      >\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          Checkout\n        </Typography>\n        <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n          {steps.map((label) => (\n            <Step key={label}>\n              <StepLabel>{label}</StepLabel>\n            </Step>\n          ))}\n        </Stepper>\n        <>\n          {activeStep === steps.length ? (\n            <>\n              <Typography variant=\"h5\" gutterBottom>\n                {paymentMessage}\n              </Typography>\n              {paymentSucceeded ? (\n <Typography variant=\"subtitle1\">\n Your order number is #{orderNumber}. We have not emailed your order\n confirmation, and will not send you an update when your order has\n shipped as this is a fake store!!!\n</Typography>\n              ) : (\n                <Button variant='contained' onClick={handleBack}>\n                  Go back and try again\n                </Button>\n              )}\n             \n            </>\n          ) : (\n            <form onSubmit={methods.handleSubmit(handleNext)}>\n              {getStepContent(activeStep)}\n              <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                {activeStep !== 0 && (\n                  <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                    Back\n                  </Button>\n                )}\n                <LoadingButton\n                loading={loading}\n                  disabled={submitDisabled()}\n                  variant=\"contained\"\n                  type=\"submit\"\n                  sx={{ mt: 3, ml: 1 }}\n                >\n                  {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                </LoadingButton>\n              </Box>\n            </form>\n          )}\n        </>\n      </Paper>\n    </FormProvider>\n  );\n}\n","import { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../app/api/agent\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useAppDispatch } from \"../../app/store/configureStore\";\nimport { setBasket } from \"../basket/basketSlice\";\nimport CheckoutPage from \"./CheckoutPage\";\n\nconst stripePromise = loadStripe('pk_test_51K5vp1Jz5oCv0FCL8yqhZyvqbVWsL4cxcLT6SlhnKmlOQJbp1FfxTuDvGSfIanPzmQdGYhhq1QBcmEfV4IkTgj4y00xs5jOCZe');\n\nexport default function CheckoutWrapper() {\n    const dispatch = useAppDispatch();\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n       agent.Payments.createPaymentIntent()\n       .then(basket => dispatch(setBasket(basket)))\n       .catch(error => console.log(error))\n       .finally(() => setLoading(false))\n    }, [dispatch])\n\n    if (loading) return <LoadingComponent message=\"Loading checkout...\" />\n\n\n    return (\n        <Elements stripe={stripePromise}>\n            <CheckoutPage />\n        </Elements>\n    )\n}\n","// import { ThemeProvider } from '@emotion/react';\nimport {\n  CssBaseline,\n  Container,\n  createTheme,\n  ThemeProvider,\n} from '@mui/material';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport AboutPage from '../../features/about/AboutPage';\nimport Catalog from '../../features/catalog/Catalog';\nimport ProductDetails from '../../features/catalog/ProductDetails';\nimport ContactPage from '../../features/contact/ContactPage';\nimport HomePage from '../../features/home/HomePage';\nimport Header from './Header';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ServerError from '../errors/ServerError';\nimport NotFound from '../errors/NotFound';\nimport BasketPage from '../../features/basket/BasketPage';\nimport LoadingComponent from './LoadingComponent';\nimport { useAppDispatch } from '../store/configureStore';\nimport { fetchBasketAsync } from '../../features/basket/basketSlice';\nimport Login from '../../features/account/Login';\nimport Register from '../../features/account/Register';\nimport { fetchCurrentUser } from '../../features/account/accountSlice';\nimport PrivateRoute from './PrivateRoute';\nimport Orders from '../../features/orders/Orders';\nimport CheckoutWrapper from '../../features/checkout/CheckoutWrapper';\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  const [loading, setLoading] = useState(true);\n\n  const initApp = useCallback(async () => {\n    try {\n      await dispatch(fetchCurrentUser());\n      await dispatch(fetchBasketAsync());\n    } catch (error) {\n      console.log(error)\n    }\n  }, [dispatch])\n\n  useEffect(() => {\n   initApp().then(() => setLoading(false));\n}, [initApp]);\n\n  const [darkMode, setDarkMode] = useState(false);\n  const paletteType = darkMode ? 'dark' : 'light';\n  const theme = createTheme({\n    palette: {\n      mode: paletteType,\n      background: {\n        default: paletteType === 'light' ? '#eaeaea' : '#121212',\n      },\n    },\n  });\n\n  function handleThemeChange() {\n    setDarkMode(!darkMode);\n  }\n\n  if (loading) return <LoadingComponent message=\"Initializing app...\" />;\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <ToastContainer position=\"bottom-right\" hideProgressBar />\n        <CssBaseline />\n        <Header darkMode={darkMode} handleThemeChange={handleThemeChange} />\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path={'/(.+)'} render={() => (\n          <Container sx={{ mt: 4 }}>\n          <Switch>\n            <Route exact path=\"/catalog\" component={Catalog} />\n            <Route path=\"/catalog/:id\" component={ProductDetails} />\n            <Route path=\"/about\" component={AboutPage} />\n            <Route path=\"/contact\" component={ContactPage} />\n            <Route path=\"/server-error\" component={ServerError} />\n            <Route path=\"/basket\" component={BasketPage} />\n            <PrivateRoute path=\"/checkout\" component={CheckoutWrapper} />\n            <PrivateRoute path=\"/orders\" component={Orders} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        )}/>\n        \n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { Router } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport { store } from './app/store/configureStore';\nimport 'slick-carousel/slick/slick.css';\nimport'slick-carousel/slick/slick-theme.css';\n\n\nexport const history = createBrowserHistory();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router history={history}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}